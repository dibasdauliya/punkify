{
  "version": 4,
  "terraform_version": "1.9.8",
  "serial": 8,
  "lineage": "5336963f-ccf2-cedb-2d58-aa25f0eb89f3",
  "outputs": {},
  "resources": [
    {
      "mode": "managed",
      "type": "cloudflare_worker_script",
      "name": "steampunk_transformer",
      "provider": "provider[\"registry.terraform.io/cloudflare/cloudflare\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "account_id": "5671d30965d77ff1176035162e2d397b",
            "analytics_engine_binding": [],
            "compatibility_date": null,
            "compatibility_flags": [],
            "content": "export default {\n\tasync fetch(request, env) {\n\t\tif (request.method === 'OPTIONS') {\n\t\t\treturn new Response(null, {\n\t\t\t\theaders: {\n\t\t\t\t\t'Access-Control-Allow-Origin': '*',\n\t\t\t\t\t'Access-Control-Allow-Methods': 'POST',\n\t\t\t\t\t'Access-Control-Allow-Headers': 'Content-Type',\n\t\t\t\t},\n\t\t\t});\n\t\t}\n\n\t\tif (request.method !== 'POST') {\n\t\t\treturn new Response('Please send a POST request', { status: 405 });\n\t\t}\n\n\t\ttry {\n\t\t\tconst { image, style_strength } = await request.json();\n\n\t\t\tif (!image) {\n\t\t\t\treturn new Response('Please provide a base64 image', { status: 400 });\n\t\t\t}\n\n\t\t\t// Convert base64 image to Uint8Array\n\t\t\tconst binaryString = atob(image.split(',')[1]);\n\t\t\tconst len = binaryString.length;\n\t\t\tconst bytes = new Uint8Array(len);\n\t\t\tfor (let i = 0; i \u003c len; i++) {\n\t\t\t\tbytes[i] = binaryString.charCodeAt(i);\n\t\t\t}\n\n\t\t\t// Steampunk style prompt\n\t\t\t// const prompt = `Transform this image into a steampunk style while keeping the main subject clearly recognizable.`;\n\n\t\t\t// Steampunk style prompt\n\t\t\tconst prompt = `Transform this image into a steampunk style while keeping the main subject clearly recognizable. \nUse a color palette of brass, copper, brown, and deep burgundy tones.`;\n\n\t\t\t// Call Stable Diffusion with img2img\n\t\t\tconst aiResponse = await env.AI.run('@cf/runwayml/stable-diffusion-v1-5-img2img', {\n\t\t\t\tprompt: prompt,\n\t\t\t\timage: [...bytes],\n\t\t\t\tnum_inference_steps: 50,\n\t\t\t\tstrength: style_strength || 0.75, // Adjustable style strength\n\t\t\t\tguidance_scale: 7.5,\n\t\t\t});\n\n\t\t\t// Return the transformed image\n\t\t\treturn new Response(aiResponse, {\n\t\t\t\theaders: {\n\t\t\t\t\t'Content-Type': 'image/png',\n\t\t\t\t\t'Access-Control-Allow-Origin': '*',\n\t\t\t\t},\n\t\t\t});\n\t\t} catch (error) {\n\t\t\tconsole.log({ error });\n\t\t\treturn new Response(`Error: ${error.message}`, {\n\t\t\t\tstatus: 500,\n\t\t\t\theaders: {\n\t\t\t\t\t'Access-Control-Allow-Origin': '*',\n\t\t\t\t},\n\t\t\t});\n\t\t}\n\t},\n};\n",
            "d1_database_binding": [],
            "dispatch_namespace": null,
            "hyperdrive_config_binding": [],
            "id": "steampunk-transformer",
            "kv_namespace_binding": [],
            "logpush": null,
            "module": null,
            "name": "steampunk-transformer",
            "placement": [],
            "plain_text_binding": [
              {
                "name": "AI_BINDING",
                "text": "enabled"
              }
            ],
            "queue_binding": [],
            "r2_bucket_binding": [],
            "secret_text_binding": [],
            "service_binding": [],
            "tags": [],
            "webassembly_binding": []
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    }
  ],
  "check_results": null
}
